@model MyEpicMVCProj.ViewModels.VideoListViewModel

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Videos.First().Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Videos.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Videos.First().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Videos.First().GenreId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Videos.First().TotalSeconds)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Videos.First().StreamingUrl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Videos.First().ImageId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Videos)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GenreId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TotalSeconds)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StreamingUrl)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageId)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id=item.Id })
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Pagination links -->
<div class="pagination">
    @if (Model.PageNumber > 1)
    {
        <a asp-action="Index" asp-route-page="1" asp-route-pageSize="@Model.PageSize">First</a>
        <a asp-action="Index" asp-route-page="@(Model.PageNumber - 1)" asp-route-pageSize="@Model.PageSize">Previous</a>
    }

    @for (var i = 1; i <= Model.TotalPages; i++)
    {
        <a asp-action="Index" asp-route-page="@i" asp-route-pageSize="@Model.PageSize">@i</a>
    }

    @if (Model.PageNumber < Model.TotalPages)
    {
        <a asp-action="Index" asp-route-page="@(Model.PageNumber + 1)" asp-route-pageSize="@Model.PageSize">Next</a>
        <a asp-action="Index" asp-route-page="@Model.TotalPages" asp-route-pageSize="@Model.PageSize">Last</a>
    }
</div>
